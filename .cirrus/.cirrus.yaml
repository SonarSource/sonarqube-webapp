# only_if: $CIRRUS_TAG == "" && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BUILD_SOURCE == 'api' )
# skip: $CIRRUS_BRANCH == "public_master"

# env:
#   CIRRUS_SHELL: bash
#   CIRRUS_CLONE_DEPTH: 0
#   FETCH_DEPTH: --depth=1

# container: &CONTAINER_TEMPLATE
#   dockerfile: .cirrus/Dockerfile
#   cpu: 4
#   memory: 6Gb

# default_template: &DEFAULT_TEMPLATE
#   clone_script: |
#     git init
#     git remote add origin https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git
#     git fetch origin $CIRRUS_CHANGE_IN_REPO $FETCH_DEPTH
#     git reset --hard $CIRRUS_CHANGE_IN_REPO

# node_modules_cache_template: &NODE_MODULES_CACHE_TEMPLATE
#   node_modules_cache:
#     folders:
#       - 'node_modules'
#       - '.yarn'
#     fingerprint_script: cat yarn.lock

# eslint_report_cache_template: &ESLINT_REPORT_CACHE_TEMPLATE
#   eslint_report_cache:
#     folders:
#       - '**/build/reports/eslint-report/**'
#     fingerprint_script: echo $CIRRUS_BUILD_ID

# jest_report_cache_template: &JEST_REPORT_CACHE_TEMPLATE
#   jest_report_cache:
#     folders:
#       - 'apps/sq-server/build/reports/coverage/**'
#     fingerprint_script: echo $CIRRUS_BUILD_ID

# install_dependencies_task:
#   <<: *DEFAULT_TEMPLATE
#   <<: *NODE_MODULES_CACHE_TEMPLATE
#   timeout_in: 15m
#   container:
#     <<: *CONTAINER_TEMPLATE
#   script:
#     - CI=false yarn install

# unit_tests_task:
#   <<: *DEFAULT_TEMPLATE
#   depends_on:
#     - install_dependencies
#   <<: *NODE_MODULES_CACHE_TEMPLATE
#   <<: *JEST_REPORT_CACHE_TEMPLATE
#   timeout_in: 30m
#   container:
#     <<: *CONTAINER_TEMPLATE
#     cpu: 8
#     memory: 24Gb
#   env:
#     SHARD_VALUE: '1'
#     SHARD_TOTAL: '1'
#   script:
#     - yarn nx test-ci-shard sq-server
#   always:
#     coverage_artifacts:
#       path: 'apps/sq-server/build/reports/coverage/**'

# lint_task:
#   <<: *DEFAULT_TEMPLATE
#   depends_on:
#     - install_dependencies
#   <<: *NODE_MODULES_CACHE_TEMPLATE
#   <<: *ESLINT_REPORT_CACHE_TEMPLATE
#   timeout_in: 15m
#   container:
#     <<: *CONTAINER_TEMPLATE
#   script:
#     - yarn nx run-many -t lint-report -p sq-server,tag:scope:shared,tag:scope:server
#   always:
#     lint_artifacts:
#       path: '**/build/reports/**'

# build_task:
#   <<: *DEFAULT_TEMPLATE
#   depends_on:
#     - install_dependencies
#   <<: *NODE_MODULES_CACHE_TEMPLATE
#   container:
#     <<: *CONTAINER_TEMPLATE
#   script:
#     - yarn nx build sq-server
#     - zip -r apps/sq-server/build/webapp-assets.jar apps/sq-server/build/webapp/*
#   always:
#     build_artifacts:
#       path: 'apps/sq-server/build/**'

# sq_analysis_task:
#   <<: *DEFAULT_TEMPLATE
#   depends_on:
#     - build
#     - lint
#     - unit_tests
#   <<: *JEST_REPORT_CACHE_TEMPLATE
#   <<: *ESLINT_REPORT_CACHE_TEMPLATE
#   container:
#     <<: *CONTAINER_TEMPLATE
#   env:
#     SONAR_HOST_URL: https://next.sonarqube.com/sonarqube
#     SONAR_TOKEN: ENCRYPTED[!b6fd814826c51e64ee61b0b6f3ae621551f6413383f7170f73580e2e141ac78c4b134b506f6288c74faa0dd564c05a29!]
#   script:
#     - .cirrus/scan-sq-server.sh
