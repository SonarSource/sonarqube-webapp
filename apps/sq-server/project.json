{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "name": "sq-server",
  "projectType": "application",
  "tags": ["type:app", "visibility:public", "scope:server"],
  "targets": {
    "build": {},
    "build-analyze": {},
    "clean": {
      "options": {
        "commands": ["jest --clearCache", "rm -rf build"]
      }
    },
    "dep-check": {},
    "format-check": {},
    "start": {},
    "test": {
      "options": {
        "cwd": "{workspaceRoot}",
        "commands": ["jest -c apps/sq-server/jest.config.js "]
      }
    },
    "test-ci-shard": {
      "options": {
        "cwd": "{workspaceRoot}",
        "commands": [
          "jest -c apps/sq-server/jest.config.ci.js --ci --shard=$SHARD_VALUE/$SHARD_TOTAL",
          "mkdir -p coverage && mv apps/sq-server/build/reports/coverage/coverage-final.json ./coverage/sq-server-$SHARD_VALUE.json"
        ]
      },
      "inputs": ["default", "^default", { "env": "SHARD_VALUE" }, { "env": "SHARD_TOTAL" }],
      "outputs": ["{workspaceRoot}/coverage/sq-server-$SHARD_VALUE.json"]
    },
    "test-coverage-merge": {
      "options": {
        "cwd": "{workspaceRoot}",
        "commands": [
          "ls ./coverage",
          "yarn nyc merge ./coverage ./coverage/merged/coverage-final.json",
          "yarn nyc report -t ./coverage/merged --report-dir ./coverage-merged --reporter=lcov"
        ]
      },
      "inputs": ["{workspaceRoot}/coverage"],
      "outputs": ["{workspaceRoot}/coverage-merged"]
    },
    "update-cwes": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "node scripts/update-cwes.js"
      },
      "parallelism": true
    },
    "generate-translation-keys": {
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "command": "node scripts/generate-translation-keys.js"
      },
      "parallelism": true
    },
    "ts-check": {},
    "validate": {
      "dependsOn": ["dep-check", "lint", "ts-check", "format-check", "test"]
    }
  }
}
