{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  "component.test": {
    "prefix": "test",
    "body": [
      "/*",
      "* Copyright (C) 2009-2024 SonarSource SA",
      "* All rights reserved",
      "* mailto:info AT sonarsource DOT com",
      "*/",
      "import { screen } from '@testing-library/react';",
      "import { ComponentProps } from 'react';",
      "import { render } from '~helpers/testUtils';",
      "import { FCProps } from '~types/misc';",
      "import ${1:component-name} from '../${1:component-name}';",
      "",
      "it('render correctly', async () => {",
      "  const { user } = setupWithProps();",
      "",
      "  expect(screen.getByText('content')).toBeVisible();",
      "  expect(screen.getByRole('button')).toHaveTextContent('open');",
      "",
      "  await user.click(screen.getByRole('button'));",
      "  expect(screen.getByRole('button')).toHaveTextContent('close');",
      "});",
      "",
      "function setupWithProps(props: Partial<ComponentProps<typeof ${1:component-name}>> = {}) {",
      "  return render(",
      "    <${1:component-name}",
      "      {...props}",
      "    />",
      "  );",
      "}$0"
    ],
    "description": "Jest test for a Class or Functional Component"
  }
}
