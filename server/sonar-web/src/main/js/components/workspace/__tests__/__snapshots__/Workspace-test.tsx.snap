// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should correctly store data locally 1`] = `"[{"branchLike":{"analysisDate":"2018-01-01","excludedFromPurge":true,"isMain":false,"name":"branch-6.7"},"key":"foo","__type__":"component"},{"key":"foo","__type__":"rule"}]"`;

exports[`should render correctly: default 1`] = `
<ContextProvider
  value={
    {
      "externalRulesRepoNames": {},
      "openComponent": [Function],
      "openRule": [Function],
    }
  }
>
  <div
    className="child"
  />
  <WorkspacePortal />
</ContextProvider>
`;

exports[`should render correctly: open component 1`] = `
<ContextProvider
  value={
    {
      "externalRulesRepoNames": {},
      "openComponent": [Function],
      "openRule": [Function],
    }
  }
>
  <div
    className="child"
  />
  <WorkspacePortal>
    <WorkspaceNav
      components={
        [
          {
            "branchLike": {
              "analysisDate": "2018-01-01",
              "excludedFromPurge": true,
              "isMain": false,
              "name": "branch-6.7",
            },
            "key": "foo",
          },
        ]
      }
      onComponentClose={[Function]}
      onComponentOpen={[Function]}
      onRuleClose={[Function]}
      onRuleOpen={[Function]}
      open={
        {
          "component": "foo",
        }
      }
      rules={[]}
    />
    <withBranchStatusActions(WorkspaceComponentViewer)
      component={
        {
          "branchLike": {
            "analysisDate": "2018-01-01",
            "excludedFromPurge": true,
            "isMain": false,
            "name": "branch-6.7",
          },
          "key": "foo",
        }
      }
      height={300}
      onClose={[Function]}
      onCollapse={[Function]}
      onLoad={[Function]}
      onMaximize={[Function]}
      onMinimize={[Function]}
      onResize={[Function]}
    />
  </WorkspacePortal>
</ContextProvider>
`;

exports[`should render correctly: open rule 1`] = `
<ContextProvider
  value={
    {
      "externalRulesRepoNames": {},
      "openComponent": [Function],
      "openRule": [Function],
    }
  }
>
  <div
    className="child"
  />
  <WorkspacePortal>
    <WorkspaceNav
      components={[]}
      onComponentClose={[Function]}
      onComponentOpen={[Function]}
      onRuleClose={[Function]}
      onRuleOpen={[Function]}
      open={
        {
          "rule": "foo",
        }
      }
      rules={
        [
          {
            "key": "foo",
          },
        ]
      }
    />
    <WorkspaceRuleViewer
      height={300}
      onClose={[Function]}
      onCollapse={[Function]}
      onLoad={[Function]}
      onMaximize={[Function]}
      onMinimize={[Function]}
      onResize={[Function]}
      rule={
        {
          "key": "foo",
        }
      }
    />
  </WorkspacePortal>
</ContextProvider>
`;
