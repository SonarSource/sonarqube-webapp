// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<tr
  className="source-line"
  data-line-number={5}
>
  <LineNumber
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineSCM
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineCode
    branchLike={
      Object {
        "analysisDate": "2018-01-01",
        "base": "master",
        "branch": "feature/foo/bar",
        "key": "1001",
        "target": "master",
        "title": "Foo Bar feature",
      }
    }
    displayIssueLocationsCount={false}
    displayIssueLocationsLink={false}
    displayLocationMarkers={false}
    issueLocations={Array []}
    issues={
      Array [
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "BUG",
        },
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "VULNERABILITY",
        },
      ]
    }
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onIssueChange={[MockFunction]}
    onIssuePopupToggle={[MockFunction]}
    onIssueSelect={[MockFunction]}
    onLocationSelect={[MockFunction]}
    onSymbolClick={[MockFunction]}
    scroll={[MockFunction]}
    secondaryIssueLocations={Array []}
    showIssues={false}
  />
</tr>
`;

exports[`should render correctly for last, new, and highlighted lines 1`] = `
<tr
  className="source-line source-line-highlighted source-line-filtered source-line-last"
  data-line-number={5}
>
  <LineNumber
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "isNew": true,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineSCM
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "isNew": true,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineCode
    branchLike={
      Object {
        "analysisDate": "2018-01-01",
        "base": "master",
        "branch": "feature/foo/bar",
        "key": "1001",
        "target": "master",
        "title": "Foo Bar feature",
      }
    }
    displayIssueLocationsCount={false}
    displayIssueLocationsLink={false}
    displayLocationMarkers={false}
    issueLocations={Array []}
    issues={
      Array [
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "BUG",
        },
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "VULNERABILITY",
        },
      ]
    }
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "isNew": true,
        "line": 5,
      }
    }
    onIssueChange={[MockFunction]}
    onIssuePopupToggle={[MockFunction]}
    onIssueSelect={[MockFunction]}
    onLocationSelect={[MockFunction]}
    onSymbolClick={[MockFunction]}
    scroll={[MockFunction]}
    secondaryIssueLocations={Array []}
    showIssues={false}
  />
</tr>
`;

exports[`should render correctly with coverage 1`] = `
<tr
  className="source-line"
  data-line-number={5}
>
  <LineNumber
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineSCM
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineCoverage
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
  />
  <LineCode
    branchLike={
      Object {
        "analysisDate": "2018-01-01",
        "base": "master",
        "branch": "feature/foo/bar",
        "key": "1001",
        "target": "master",
        "title": "Foo Bar feature",
      }
    }
    displayIssueLocationsCount={false}
    displayIssueLocationsLink={false}
    displayLocationMarkers={false}
    issueLocations={Array []}
    issues={
      Array [
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "BUG",
        },
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "VULNERABILITY",
        },
      ]
    }
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onIssueChange={[MockFunction]}
    onIssuePopupToggle={[MockFunction]}
    onIssueSelect={[MockFunction]}
    onLocationSelect={[MockFunction]}
    onSymbolClick={[MockFunction]}
    scroll={[MockFunction]}
    secondaryIssueLocations={Array []}
    showIssues={false}
  />
</tr>
`;

exports[`should render correctly with duplication information 1`] = `
<tr
  className="source-line"
  data-line-number={5}
>
  <LineNumber
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineSCM
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineDuplications
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onClick={[MockFunction]}
  />
  <LineDuplicationBlock
    duplicated={false}
    index={0}
    key="0"
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
    renderDuplicationPopup={[MockFunction]}
  />
  <LineDuplicationBlock
    duplicated={false}
    index={1}
    key="1"
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
    renderDuplicationPopup={[MockFunction]}
  />
  <LineDuplicationBlock
    duplicated={false}
    index={2}
    key="2"
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
    renderDuplicationPopup={[MockFunction]}
  />
  <LineCode
    branchLike={
      Object {
        "analysisDate": "2018-01-01",
        "base": "master",
        "branch": "feature/foo/bar",
        "key": "1001",
        "target": "master",
        "title": "Foo Bar feature",
      }
    }
    displayIssueLocationsCount={false}
    displayIssueLocationsLink={false}
    displayLocationMarkers={false}
    issueLocations={Array []}
    issues={
      Array [
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "BUG",
        },
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "VULNERABILITY",
        },
      ]
    }
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onIssueChange={[MockFunction]}
    onIssuePopupToggle={[MockFunction]}
    onIssueSelect={[MockFunction]}
    onLocationSelect={[MockFunction]}
    onSymbolClick={[MockFunction]}
    scroll={[MockFunction]}
    secondaryIssueLocations={Array []}
    showIssues={false}
  />
</tr>
`;

exports[`should render correctly with issues info 1`] = `
<tr
  className="source-line"
  data-line-number={5}
>
  <LineNumber
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineSCM
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onPopupToggle={[MockFunction]}
    popupOpen={false}
  />
  <LineIssuesIndicator
    issues={
      Array [
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "BUG",
        },
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "VULNERABILITY",
        },
      ]
    }
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onClick={[Function]}
  />
  <LineCode
    branchLike={
      Object {
        "analysisDate": "2018-01-01",
        "base": "master",
        "branch": "feature/foo/bar",
        "key": "1001",
        "target": "master",
        "title": "Foo Bar feature",
      }
    }
    displayIssueLocationsCount={false}
    displayIssueLocationsLink={false}
    displayLocationMarkers={false}
    issueLocations={Array []}
    issues={
      Array [
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "BUG",
        },
        Object {
          "actions": Array [],
          "component": "main.js",
          "componentLongName": "main.js",
          "componentQualifier": "FIL",
          "componentUuid": "foo1234",
          "creationDate": "2017-03-01T09:36:01+0100",
          "flows": Array [],
          "fromHotspot": false,
          "key": "AVsae-CQS-9G3txfbFN2",
          "line": 25,
          "message": "Reduce the number of conditional operators (4) used in the expression",
          "organization": "myorg",
          "project": "myproject",
          "projectKey": "foo",
          "projectName": "Foo",
          "projectOrganization": "org",
          "rule": "javascript:S1067",
          "ruleName": "foo",
          "secondaryLocations": Array [],
          "severity": "MAJOR",
          "status": "OPEN",
          "textRange": Object {
            "endLine": 26,
            "endOffset": 15,
            "startLine": 25,
            "startOffset": 0,
          },
          "transitions": Array [],
          "type": "VULNERABILITY",
        },
      ]
    }
    line={
      Object {
        "code": "function fooBar() {",
        "coverageStatus": "covered",
        "coveredConditions": 2,
        "line": 5,
      }
    }
    onIssueChange={[MockFunction]}
    onIssuePopupToggle={[MockFunction]}
    onIssueSelect={[MockFunction]}
    onLocationSelect={[MockFunction]}
    onSymbolClick={[MockFunction]}
    scroll={[MockFunction]}
    secondaryIssueLocations={Array []}
    showIssues={false}
  />
</tr>
`;
