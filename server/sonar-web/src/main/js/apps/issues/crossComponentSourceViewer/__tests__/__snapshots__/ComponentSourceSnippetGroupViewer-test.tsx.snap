// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<div
  className="component-source-container"
>
  <SourceViewerHeaderSlim
    branchLike={
      Object {
        "analysisDate": "2018-01-01",
        "excludedFromPurge": true,
        "isMain": true,
        "name": "master",
      }
    }
    expandable={true}
    loading={false}
    onExpand={[Function]}
    sourceViewerFile={
      Object {
        "key": "foo",
        "measures": Object {
          "coverage": "85.2",
          "duplicationDensity": "1.0",
          "issues": "12",
          "lines": "56",
        },
        "path": "foo/bar.ts",
        "project": "my-project",
        "projectName": "MyProject",
        "q": "FIL",
        "uuid": "foo-bar",
      }
    }
  />
</div>
`;

exports[`should render correctly line with issue 1`] = `
<div
  className="issue-list"
>
  <Issue
    branchLike={
      Object {
        "analysisDate": "2018-01-01",
        "excludedFromPurge": true,
        "isMain": true,
        "name": "master",
      }
    }
    displayWhyIsThisAnIssue={false}
    issue={
      Object {
        "actions": Array [],
        "component": "main.js",
        "componentLongName": "main.js",
        "componentQualifier": "FIL",
        "componentUuid": "foo1234",
        "creationDate": "2017-03-01T09:36:01+0100",
        "flows": Array [],
        "fromHotspot": false,
        "key": "AVsae-CQS-9G3txfbFN2",
        "line": 25,
        "message": "Reduce the number of conditional operators (4) used in the expression",
        "project": "myproject",
        "projectKey": "foo",
        "projectName": "Foo",
        "rule": "javascript:S1067",
        "ruleName": "foo",
        "secondaryLocations": Array [],
        "severity": "MAJOR",
        "status": "OPEN",
        "textRange": Object {
          "endLine": 1,
          "endOffset": 1,
          "startLine": 1,
          "startOffset": 0,
        },
        "transitions": Array [],
        "type": "BUG",
      }
    }
    key="AVsae-CQS-9G3txfbFN2"
    onChange={[MockFunction]}
    onClick={[Function]}
    onPopupToggle={[MockFunction]}
    selected={true}
  />
</div>
`;
