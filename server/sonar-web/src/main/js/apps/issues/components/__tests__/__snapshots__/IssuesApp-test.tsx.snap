// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should check all issues, even the ones that are not visible 1`] = `
<Button
  disabled={false}
  id="issues-bulk-change"
  onClick={[Function]}
>
  issues.bulk_change_X_issues.250
</Button>
`;

exports[`should check max 500 issues 1`] = `
<Button
  disabled={false}
  id="issues-bulk-change"
  onClick={[Function]}
>
  issues.bulk_change_X_issues.500
</Button>
`;

exports[`should show warnning when not all projects are accessible 1`] = `
<div
  className="layout-page-side-outer"
>
  <section
    aria-label="filters"
    className="layout-page-side"
    style={
      Object {
        "top": 0,
      }
    }
  >
    <div
      className="layout-page-side-inner"
    >
      <A11ySkipTarget
        anchor="issues_sidebar"
        label="issues.skip_to_filters"
        weight={10}
      />
      <Alert
        className="big-spacer-top big-spacer-right big-spacer-left it__portfolio_warning"
        variant="warning"
      >
        <Styled(div)>
          issues.not_all_issue_show
          <HelpTooltip
            ariaLabel="issues.not_all_issue_show_why"
            className="spacer-left"
            overlay="issues.not_all_issue_show_why"
          />
        </Styled(div)>
      </Alert>
      <div
        className="layout-page-filters"
      >
        <div
          className="display-flex-justify-center big-spacer-bottom"
        >
          <ButtonToggle
            onCheck={[Function]}
            options={
              Array [
                Object {
                  "label": "issues.my_issues",
                  "value": true,
                },
                Object {
                  "label": "all",
                  "value": false,
                },
              ]
            }
            value={false}
          />
        </div>
        <FiltersHeader
          displayReset={true}
          onReset={[Function]}
        />
        <withAppStateContext(Sidebar)
          component={
            Object {
              "breadcrumbs": Array [],
              "canBrowseAllChildProjects": false,
              "key": "my-project",
              "name": "MyProject",
              "qualifier": "VW",
              "qualityGate": Object {
                "isDefault": true,
                "key": "30",
                "name": "Sonar way",
              },
              "qualityProfiles": Array [
                Object {
                  "deleted": false,
                  "key": "my-qp",
                  "language": "ts",
                  "name": "Sonar way",
                },
              ],
              "tags": Array [],
            }
          }
          createdAfterIncludesTime={false}
          facets={Object {}}
          loadSearchResultCount={[Function]}
          loadingFacets={Object {}}
          myIssues={false}
          onFacetToggle={[Function]}
          onFilterChange={[Function]}
          openFacets={
            Object {
              "owaspTop10": false,
              "owaspTop10-2021": false,
              "sansTop25": false,
              "severities": true,
              "sonarsourceSecurity": false,
              "standards": false,
              "types": true,
            }
          }
          query={
            Object {
              "assigned": true,
              "assignees": Array [],
              "author": Array [],
              "createdAfter": undefined,
              "createdAt": "",
              "createdBefore": undefined,
              "createdInLast": "",
              "cwe": Array [],
              "directories": Array [],
              "files": Array [],
              "inNewCodePeriod": false,
              "issues": Array [],
              "languages": Array [],
              "owaspTop10": Array [],
              "owaspTop10-2021": Array [],
              "pciDss-3.2": Array [],
              "pciDss-4.0": Array [],
              "projects": Array [],
              "resolutions": Array [],
              "resolved": true,
              "rules": Array [],
              "sansTop25": Array [],
              "scopes": Array [],
              "severities": Array [],
              "sonarsourceSecurity": Array [],
              "sort": "",
              "statuses": Array [],
              "tags": Array [],
              "types": Array [],
            }
          }
          referencedComponentsById={Object {}}
          referencedComponentsByKey={Object {}}
          referencedLanguages={Object {}}
          referencedRules={Object {}}
          referencedUsers={Object {}}
        />
      </div>
    </div>
  </section>
</div>
`;
