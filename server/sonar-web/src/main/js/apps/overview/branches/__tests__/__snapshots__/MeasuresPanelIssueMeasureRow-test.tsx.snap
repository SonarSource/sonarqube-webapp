// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly for apps: new code 1`] = `
<div
  className="display-flex-row overview-measures-row"
  data-test="overview__measures-bug"
>
  <div
    className="overview-panel-big-padded flex-1 small display-flex-center big-spacer-left"
  >
    <Memo(IssueLabel)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "APP",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="BUG"
      useDiffMetric={true}
    />
  </div>
</div>
`;

exports[`should render correctly for apps: overview 1`] = `
<div
  className="display-flex-row overview-measures-row"
  data-test="overview__measures-bug"
>
  <div
    className="overview-panel-big-padded flex-1 small display-flex-center big-spacer-left"
  >
    <Memo(IssueLabel)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "APP",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="BUG"
      useDiffMetric={false}
    />
  </div>
  <div
    className="overview-panel-big-padded overview-measures-aside display-flex-center"
  >
    <Memo(IssueRating)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "APP",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="BUG"
      useDiffMetric={false}
    />
  </div>
</div>
`;

exports[`should render correctly for projects: Bug 1`] = `
<div
  className="display-flex-row overview-measures-row"
  data-test="overview__measures-bug"
>
  <div
    className="overview-panel-big-padded flex-1 small display-flex-center big-spacer-left"
  >
    <Memo(IssueLabel)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="BUG"
      useDiffMetric={true}
    />
  </div>
  <div
    className="overview-panel-big-padded overview-measures-aside display-flex-center"
  >
    <Memo(IssueRating)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="BUG"
      useDiffMetric={true}
    />
  </div>
</div>
`;

exports[`should render correctly for projects: Code Smell 1`] = `
<div
  className="display-flex-row overview-measures-row"
  data-test="overview__measures-code_smell"
>
  <div
    className="overview-panel-big-padded flex-1 small display-flex-center big-spacer-left"
  >
    <Memo(DebtValue)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      useDiffMetric={true}
    />
  </div>
  <div
    className="flex-1 small display-flex-center"
  >
    <Memo(IssueLabel)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="CODE_SMELL"
      useDiffMetric={true}
    />
  </div>
  <div
    className="overview-panel-big-padded overview-measures-aside display-flex-center"
  >
    <Memo(IssueRating)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="CODE_SMELL"
      useDiffMetric={true}
    />
  </div>
</div>
`;

exports[`should render correctly for projects: Hotspot 1`] = `
<div
  className="display-flex-row overview-measures-row"
  data-test="overview__measures-security_hotspot"
>
  <div
    className="overview-panel-big-padded flex-1 small display-flex-center big-spacer-left"
  >
    <Memo(IssueLabel)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      helpTooltip="metric.security_hotspots.full_description"
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="SECURITY_HOTSPOT"
      useDiffMetric={true}
    />
  </div>
  <div
    className="flex-1 small display-flex-center"
  >
    <SecurityHotspotsReviewed
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      useDiffMetric={true}
    />
  </div>
  <div
    className="overview-panel-big-padded overview-measures-aside display-flex-center"
  >
    <Memo(IssueRating)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="SECURITY_HOTSPOT"
      useDiffMetric={true}
    />
  </div>
</div>
`;

exports[`should render correctly for projects: Overview 1`] = `
<div
  className="display-flex-row overview-measures-row"
  data-test="overview__measures-bug"
>
  <div
    className="overview-panel-big-padded flex-1 small display-flex-center big-spacer-left"
  >
    <Memo(IssueLabel)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="BUG"
      useDiffMetric={false}
    />
  </div>
  <div
    className="overview-panel-big-padded overview-measures-aside display-flex-center"
  >
    <Memo(IssueRating)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="BUG"
      useDiffMetric={false}
    />
  </div>
</div>
`;

exports[`should render correctly for projects: Vulnerabilty 1`] = `
<div
  className="display-flex-row overview-measures-row"
  data-test="overview__measures-vulnerability"
>
  <div
    className="overview-panel-big-padded flex-1 small display-flex-center big-spacer-left"
  >
    <Memo(IssueLabel)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="VULNERABILITY"
      useDiffMetric={true}
    />
  </div>
  <div
    className="overview-panel-big-padded overview-measures-aside display-flex-center"
  >
    <Memo(IssueRating)
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      measures={
        [
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "coverage",
              "key": "coverage",
              "name": "coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_coverage",
              "key": "new_coverage",
              "name": "new_coverage",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "bugs",
              "key": "bugs",
              "name": "bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
          {
            "bestValue": true,
            "leak": "1",
            "metric": {
              "id": "new_bugs",
              "key": "new_bugs",
              "name": "new_bugs",
              "type": "PERCENT",
            },
            "period": {
              "bestValue": true,
              "index": 1,
              "value": "1.0",
            },
            "value": "1.0",
          },
        ]
      }
      type="VULNERABILITY"
      useDiffMetric={true}
    />
  </div>
</div>
`;
