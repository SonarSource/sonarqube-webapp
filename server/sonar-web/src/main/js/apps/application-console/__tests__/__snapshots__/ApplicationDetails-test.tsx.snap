// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should handle editing: edit form 1`] = `
<EditForm
  application={
    Object {
      "branches": Array [
        Object {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": false,
          "name": "branch-6.7",
        },
      ],
      "key": "foo",
      "name": "Foo",
      "projects": Array [
        Object {
          "branch": "master",
          "isMain": true,
          "key": "bar",
          "name": "Bar",
        },
      ],
      "visibility": "private",
    }
  }
  header="portfolios.edit_application"
  onChange={[MockFunction]}
  onClose={[Function]}
  onEdit={[MockFunction]}
/>
`;

exports[`should render correctly: can delete and recompute 1`] = `
<div
  className="boxed-group portfolios-console-details"
  id="view-details"
>
  <div
    className="boxed-group-actions"
  >
    <Button
      className="little-spacer-right"
      id="view-details-edit"
      onClick={[Function]}
    >
      edit
    </Button>
    <Button
      className="little-spacer-right"
      disabled={false}
      onClick={[Function]}
    >
      application_console.recompute
    </Button>
    <ConfirmButton
      confirmButtonText="delete"
      isDestructive={true}
      modalBody="application_console.do_you_want_to_delete.Foo"
      modalHeader="application_console.delete_application"
      onConfirm={[Function]}
    >
      <Component />
    </ConfirmButton>
  </div>
  <header
    className="boxed-group-header"
    id="view-details-header"
  >
    <h2
      className="text-limited"
      title="Foo"
    >
      Foo
    </h2>
  </header>
  <div
    className="boxed-group-inner"
    id="view-details-content"
  >
    <div
      className="big-spacer-bottom"
    >
      <div
        className="little-spacer-bottom"
      >
        Foo bar
      </div>
      <div
        className="subtitle"
      >
        key
        : 
        foo
        <Link
          className="spacer-left"
          onlyActiveOnIndex={false}
          style={Object {}}
          to={
            Object {
              "pathname": "/dashboard",
              "query": Object {
                "id": "foo",
              },
            }
          }
        >
          application_console.open_dashbard
        </Link>
      </div>
    </div>
    <ApplicationDetailsProjects
      application={
        Object {
          "branches": Array [
            Object {
              "analysisDate": "2018-01-01",
              "excludedFromPurge": true,
              "isMain": false,
              "name": "branch-6.7",
            },
          ],
          "description": "Foo bar",
          "key": "foo",
          "name": "Foo",
          "projects": Array [
            Object {
              "branch": "master",
              "isMain": true,
              "key": "bar",
              "name": "Bar",
            },
          ],
          "visibility": "private",
        }
      }
      onAddProject={[MockFunction]}
      onRemoveProject={[MockFunction]}
    />
    <ApplicationBranches
      application={
        Object {
          "branches": Array [
            Object {
              "analysisDate": "2018-01-01",
              "excludedFromPurge": true,
              "isMain": false,
              "name": "branch-6.7",
            },
          ],
          "description": "Foo bar",
          "key": "foo",
          "name": "Foo",
          "projects": Array [
            Object {
              "branch": "master",
              "isMain": true,
              "key": "bar",
              "name": "Bar",
            },
          ],
          "visibility": "private",
        }
      }
      onUpdateBranches={[MockFunction]}
    />
  </div>
</div>
`;

exports[`should render correctly: default 1`] = `
<div
  className="boxed-group portfolios-console-details"
  id="view-details"
>
  <div
    className="boxed-group-actions"
  >
    <Button
      className="little-spacer-right"
      id="view-details-edit"
      onClick={[Function]}
    >
      edit
    </Button>
  </div>
  <header
    className="boxed-group-header"
    id="view-details-header"
  >
    <h2
      className="text-limited"
      title="Foo"
    >
      Foo
    </h2>
  </header>
  <div
    className="boxed-group-inner"
    id="view-details-content"
  >
    <div
      className="big-spacer-bottom"
    >
      <div
        className="subtitle"
      >
        key
        : 
        foo
        <Link
          className="spacer-left"
          onlyActiveOnIndex={false}
          style={Object {}}
          to={
            Object {
              "pathname": "/dashboard",
              "query": Object {
                "id": "foo",
              },
            }
          }
        >
          application_console.open_dashbard
        </Link>
      </div>
    </div>
    <ApplicationDetailsProjects
      application={
        Object {
          "branches": Array [
            Object {
              "analysisDate": "2018-01-01",
              "excludedFromPurge": true,
              "isMain": false,
              "name": "branch-6.7",
            },
          ],
          "key": "foo",
          "name": "Foo",
          "projects": Array [
            Object {
              "branch": "master",
              "isMain": true,
              "key": "bar",
              "name": "Bar",
            },
          ],
          "visibility": "private",
        }
      }
      onAddProject={[MockFunction]}
      onRemoveProject={[MockFunction]}
    />
    <ApplicationBranches
      application={
        Object {
          "branches": Array [
            Object {
              "analysisDate": "2018-01-01",
              "excludedFromPurge": true,
              "isMain": false,
              "name": "branch-6.7",
            },
          ],
          "key": "foo",
          "name": "Foo",
          "projects": Array [
            Object {
              "branch": "master",
              "isMain": true,
              "key": "bar",
              "name": "Bar",
            },
          ],
          "visibility": "private",
        }
      }
      onUpdateBranches={[MockFunction]}
    />
  </div>
</div>
`;
