// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`works with existing organization 1`] = `
<OrganizationStep
  currentUser={
    Object {
      "isLoggedIn": true,
      "login": "user",
    }
  }
  finished={false}
  onContinue={[MockFunction]}
  onOpen={[MockFunction]}
  open={true}
  stepNumber={1}
>
  <Step
    finished={false}
    onOpen={[MockFunction]}
    open={true}
    renderForm={[Function]}
    renderResult={[Function]}
    stepNumber={1}
    stepTitle={
      <span>
        onboarding.organization.header
        <DocTooltip
          className="little-spacer-left"
          doc="organizations/organization"
        />
      </span>
    }
  >
    <div
      className="boxed-group onboarding-step is-open"
    >
      <div
        className="onboarding-step-number"
      >
        1
      </div>
      <div
        className="boxed-group-header"
      >
        <h2>
          <span>
            onboarding.organization.header
            <DocTooltip
              className="little-spacer-left"
              doc="organizations/organization"
            >
              <HelpTooltip
                className="little-spacer-left"
                onShow={[Function]}
                overlay={
                  <div
                    className="abs-width-300"
                  >
                    <LazyLoader
                      className="cut-margins"
                      isTooltip={true}
                    />
                  </div>
                }
              >
                <div
                  className="help-tooltip little-spacer-left"
                >
                  <Tooltip
                    mouseLeaveDelay={0.25}
                    onShow={[Function]}
                    overlay={
                      <div
                        className="abs-width-300"
                      >
                        <LazyLoader
                          className="cut-margins"
                          isTooltip={true}
                        />
                      </div>
                    }
                  >
                    <TooltipInner
                      mouseEnterDelay={0.1}
                      mouseLeaveDelay={0.25}
                      onShow={[Function]}
                      overlay={
                        <div
                          className="abs-width-300"
                        >
                          <LazyLoader
                            className="cut-margins"
                            isTooltip={true}
                          />
                        </div>
                      }
                    >
                      <span
                        className="display-inline-flex-center"
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <HelpIcon
                          fill="#b4b4b4"
                          size={12}
                        >
                          <Icon
                            size={12}
                          >
                            <svg
                              height={12}
                              style={
                                Object {
                                  "clipRule": "evenodd",
                                  "fillRule": "evenodd",
                                  "strokeLinejoin": "round",
                                  "strokeMiterlimit": "1.41421",
                                }
                              }
                              version="1.1"
                              viewBox="0 0 16 16"
                              width={12}
                              xmlSpace="preserve"
                              xmlnsXlink="http://www.w3.org/1999/xlink"
                            >
                              <g
                                transform="matrix(0.0364583,0,0,0.0364583,1,-0.166667)"
                              >
                                <path
                                  d="M224,344L224,296C224,293.667 223.25,291.75 221.75,290.25C220.25,288.75 218.333,288 216,288L168,288C165.667,288 163.75,288.75 162.25,290.25C160.75,291.75 160,293.667 160,296L160,344C160,346.333 160.75,348.25 162.25,349.75C163.75,351.25 165.667,352 168,352L216,352C218.333,352 220.25,351.25 221.75,349.75C223.25,348.25 224,346.333 224,344ZM288,176C288,161.333 283.375,147.75 274.125,135.25C264.875,122.75 253.333,113.083 239.5,106.25C225.667,99.417 211.5,96 197,96C156.5,96 125.583,113.75 104.25,149.25C101.75,153.25 102.417,156.75 106.25,159.75L139.25,184.75C140.417,185.75 142,186.25 144,186.25C146.667,186.25 148.75,185.25 150.25,183.25C159.083,171.917 166.25,164.25 171.75,160.25C177.417,156.25 184.583,154.25 193.25,154.25C201.25,154.25 208.375,156.417 214.625,160.75C220.875,165.083 224,170 224,175.5C224,181.833 222.333,186.917 219,190.75C215.667,194.583 210,198.333 202,202C191.5,206.667 181.875,213.875 173.125,223.625C164.375,233.375 160,243.833 160,255L160,264C160,266.333 160.75,268.25 162.25,269.75C163.75,271.25 165.667,272 168,272L216,272C218.333,272 220.25,271.25 221.75,269.75C223.25,268.25 224,266.333 224,264C224,260.833 225.792,256.708 229.375,251.625C232.958,246.542 237.5,242.417 243,239.25C248.333,236.25 252.417,233.875 255.25,232.125C258.083,230.375 261.917,227.458 266.75,223.375C271.583,219.292 275.292,215.292 277.875,211.375C280.458,207.458 282.792,202.417 284.875,196.25C286.958,190.083 288,183.333 288,176ZM384,224C384,258.833 375.417,290.958 358.25,320.375C341.083,349.792 317.792,373.083 288.375,390.25C258.958,407.417 226.833,416 192,416C157.167,416 125.042,407.417 95.625,390.25C66.208,373.083 42.917,349.792 25.75,320.375C8.583,290.958 0,258.833 0,224C0,189.167 8.583,157.042 25.75,127.625C42.917,98.208 66.208,74.917 95.625,57.75C125.042,40.583 157.167,32 192,32C226.833,32 258.958,40.583 288.375,57.75C317.792,74.917 341.083,98.208 358.25,127.625C375.417,157.042 384,189.167 384,224Z"
                                  style={
                                    Object {
                                      "fill": "#b4b4b4",
                                    }
                                  }
                                />
                              </g>
                            </svg>
                          </Icon>
                        </HelpIcon>
                      </span>
                    </TooltipInner>
                  </Tooltip>
                </div>
              </HelpTooltip>
            </DocTooltip>
          </span>
        </h2>
      </div>
      <div
        className="boxed-group-inner"
      >
        <div
          className="big-spacer-bottom width-50"
        >
          onboarding.organization.text
        </div>
        <div>
          <div
            className="big-spacer-top"
          >
            <a
              className="js-existing link-base-color link-no-underline"
              href="#"
              onClick={[Function]}
            >
              <i
                className="icon-radio spacer-right is-checked"
              />
              onboarding.organization.exising_organization
            </a>
            <div
              className="big-spacer-top"
            >
              <Select
                className="input-super-large"
                clearable={false}
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "another",
                      "value": "another",
                    },
                    Object {
                      "label": "user",
                      "value": "user",
                    },
                  ]
                }
              >
                <LazyLoader
                  className="input-super-large"
                  clearRenderer={[Function]}
                  clearable={false}
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "another",
                        "value": "another",
                      },
                      Object {
                        "label": "user",
                        "value": "user",
                      },
                    ]
                  }
                >
                  <Select
                    arrowRenderer={[Function]}
                    autosize={true}
                    backspaceRemoves={true}
                    backspaceToRemoveMessage="Press backspace to remove {label}"
                    className="input-super-large"
                    clearAllText="Clear all"
                    clearRenderer={[Function]}
                    clearValueText="Clear value"
                    clearable={false}
                    closeOnSelect={true}
                    deleteRemoves={true}
                    delimiter=","
                    disabled={false}
                    escapeClearsValue={true}
                    filterOptions={[Function]}
                    ignoreAccents={true}
                    ignoreCase={true}
                    inputProps={Object {}}
                    isLoading={false}
                    joinValues={false}
                    labelKey="label"
                    matchPos="any"
                    matchProp="any"
                    menuBuffer={0}
                    menuRenderer={[Function]}
                    multi={false}
                    noResultsText="No results found"
                    onBlurResetsInput={true}
                    onChange={[Function]}
                    onCloseResetsInput={true}
                    onSelectResetsInput={true}
                    openOnClick={true}
                    optionComponent={[Function]}
                    options={
                      Array [
                        Object {
                          "label": "another",
                          "value": "another",
                        },
                        Object {
                          "label": "user",
                          "value": "user",
                        },
                      ]
                    }
                    pageSize={5}
                    placeholder="Select..."
                    removeSelected={true}
                    required={false}
                    rtl={false}
                    scrollMenuIntoView={true}
                    searchable={true}
                    simpleValue={false}
                    tabSelectsValue={true}
                    trimFilter={true}
                    valueComponent={[Function]}
                    valueKey="value"
                  >
                    <div
                      className="Select input-super-large is-searchable Select--single"
                    >
                      <div
                        className="Select-control"
                        onKeyDown={[Function]}
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                      >
                        <span
                          className="Select-multi-value-wrapper"
                          id="react-select-2--value"
                        >
                          <div
                            className="Select-placeholder"
                          >
                            Select...
                          </div>
                          <AutosizeInput
                            aria-activedescendant="react-select-2--value"
                            aria-expanded="false"
                            aria-haspopup="false"
                            aria-owns=""
                            className="Select-input"
                            injectStyles={true}
                            minWidth="5"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            role="combobox"
                            value=""
                          >
                            <div
                              className="Select-input"
                              style={
                                Object {
                                  "display": "inline-block",
                                }
                              }
                            >
                              <input
                                aria-activedescendant="react-select-2--value"
                                aria-expanded="false"
                                aria-haspopup="false"
                                aria-owns=""
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                role="combobox"
                                style={
                                  Object {
                                    "boxSizing": "content-box",
                                    "width": "5px",
                                  }
                                }
                                value=""
                              />
                              <div
                                style={
                                  Object {
                                    "height": 0,
                                    "left": 0,
                                    "overflow": "scroll",
                                    "position": "absolute",
                                    "top": 0,
                                    "visibility": "hidden",
                                    "whiteSpace": "pre",
                                  }
                                }
                              />
                            </div>
                          </AutosizeInput>
                        </span>
                        <span
                          className="Select-arrow-zone"
                          onMouseDown={[Function]}
                        >
                          <span
                            className="Select-arrow"
                            onMouseDown={[Function]}
                          />
                        </span>
                      </div>
                    </div>
                  </Select>
                </LazyLoader>
              </Select>
            </div>
          </div>
          <div
            className="big-spacer-top"
          >
            <a
              className="js-new link-base-color link-no-underline"
              href="#"
              onClick={[Function]}
            >
              <i
                className="icon-radio spacer-right"
              />
              onboarding.organization.create_another_organization
            </a>
          </div>
        </div>
      </div>
    </div>
  </Step>
</OrganizationStep>
`;
