// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly: default 1`] = `
<Modal
  contentLabel="quality_gates.permissions.grant"
  onRequestClose={[MockFunction]}
>
  <header
    className="modal-head"
  >
    <h2>
      quality_gates.permissions.grant
    </h2>
  </header>
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="modal-body"
    >
      <div
        className="modal-field"
      >
        <label>
          quality_gates.permissions.search
        </label>
        <Select
          autoFocus={true}
          className="Select-big"
          components={
            Object {
              "Control": [Function],
              "Option": [Function],
              "SingleValue": [Function],
            }
          }
          filterOptions={[Function]}
          isClearable={false}
          isLoading={false}
          isSearchable={true}
          noOptionsMessage={[Function]}
          onChange={[MockFunction]}
          onInputChange={[MockFunction]}
          options={Array []}
          placeholder=""
        />
      </div>
    </div>
    <footer
      className="modal-foot"
    >
      <SubmitButton
        disabled={true}
      >
        add_verb
      </SubmitButton>
      <ResetButtonLink
        onClick={[MockFunction]}
      >
        cancel
      </ResetButtonLink>
    </footer>
  </form>
</Modal>
`;

exports[`should render correctly: query and results 1`] = `
<Modal
  contentLabel="quality_gates.permissions.grant"
  onRequestClose={[MockFunction]}
>
  <header
    className="modal-head"
  >
    <h2>
      quality_gates.permissions.grant
    </h2>
  </header>
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="modal-body"
    >
      <div
        className="modal-field"
      >
        <label>
          quality_gates.permissions.search
        </label>
        <Select
          autoFocus={true}
          className="Select-big"
          components={
            Object {
              "Control": [Function],
              "Option": [Function],
              "SingleValue": [Function],
            }
          }
          filterOptions={[Function]}
          isClearable={false}
          isLoading={false}
          isSearchable={true}
          noOptionsMessage={[Function]}
          onChange={[MockFunction]}
          onInputChange={[MockFunction]}
          options={
            Array [
              Object {
                "login": "userlogin",
                "value": "userlogin",
              },
              Object {
                "name": "group name",
                "value": "group name",
              },
            ]
          }
          placeholder=""
        />
      </div>
    </div>
    <footer
      className="modal-foot"
    >
      <SubmitButton
        disabled={true}
      >
        add_verb
      </SubmitButton>
      <ResetButtonLink
        onClick={[MockFunction]}
      >
        cancel
      </ResetButtonLink>
    </footer>
  </form>
</Modal>
`;

exports[`should render correctly: selection 1`] = `
<Modal
  contentLabel="quality_gates.permissions.grant"
  onRequestClose={[MockFunction]}
>
  <header
    className="modal-head"
  >
    <h2>
      quality_gates.permissions.grant
    </h2>
  </header>
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="modal-body"
    >
      <div
        className="modal-field"
      >
        <label>
          quality_gates.permissions.search
        </label>
        <Select
          autoFocus={true}
          className="Select-big"
          components={
            Object {
              "Control": [Function],
              "Option": [Function],
              "SingleValue": [Function],
            }
          }
          filterOptions={[Function]}
          isClearable={false}
          isLoading={false}
          isSearchable={true}
          noOptionsMessage={[Function]}
          onChange={[MockFunction]}
          onInputChange={[MockFunction]}
          options={Array []}
          placeholder=""
        />
      </div>
    </div>
    <footer
      className="modal-foot"
    >
      <SubmitButton
        disabled={false}
      >
        add_verb
      </SubmitButton>
      <ResetButtonLink
        onClick={[MockFunction]}
      >
        cancel
      </ResetButtonLink>
    </footer>
  </form>
</Modal>
`;

exports[`should render correctly: submitting 1`] = `
<Modal
  contentLabel="quality_gates.permissions.grant"
  onRequestClose={[MockFunction]}
>
  <header
    className="modal-head"
  >
    <h2>
      quality_gates.permissions.grant
    </h2>
  </header>
  <form
    onSubmit={[MockFunction]}
  >
    <div
      className="modal-body"
    >
      <div
        className="modal-field"
      >
        <label>
          quality_gates.permissions.search
        </label>
        <Select
          autoFocus={true}
          className="Select-big"
          components={
            Object {
              "Control": [Function],
              "Option": [Function],
              "SingleValue": [Function],
            }
          }
          filterOptions={[Function]}
          isClearable={false}
          isLoading={false}
          isSearchable={true}
          noOptionsMessage={[Function]}
          onChange={[MockFunction]}
          onInputChange={[MockFunction]}
          options={Array []}
          placeholder=""
        />
      </div>
    </div>
    <footer
      className="modal-foot"
    >
      <i
        className="spinner spacer-right"
      />
      <SubmitButton
        disabled={true}
      >
        add_verb
      </SubmitButton>
      <ResetButtonLink
        onClick={[MockFunction]}
      >
        cancel
      </ResetButtonLink>
    </footer>
  </form>
</Modal>
`;

exports[`should render options correctly: group 1`] = `
<React.Fragment>
  <GroupIcon
    size={16}
  />
  <strong
    className="spacer-left"
  >
    group name
  </strong>
</React.Fragment>
`;

exports[`should render options correctly: user 1`] = `
<React.Fragment>
  <withAppStateContext(Avatar)
    hash="A"
    name="name"
    size={16}
  />
  <strong
    className="spacer-left"
  >
    name
  </strong>
  <span
    className="note little-spacer-left"
  >
    login
  </span>
</React.Fragment>
`;
