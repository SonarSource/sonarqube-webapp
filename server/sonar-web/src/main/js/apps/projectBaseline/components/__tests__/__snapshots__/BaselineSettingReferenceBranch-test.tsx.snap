// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderOption should render correctly: branch 1`] = `
<Option
  data={
    Object {
      "isMain": false,
      "label": "branch-7.4",
      "value": "branch-7.4",
    }
  }
>
  <React.Fragment>
    <span>
      branch-7.4
    </span>
  </React.Fragment>
</Option>
`;

exports[`renderOption should render correctly: branch doesn't exist 1`] = `
<Option
  data={
    Object {
      "isInvalid": true,
      "isMain": false,
      "value": "branch-nope",
    }
  }
>
  <Tooltip
    overlay="baseline.reference_branch.does_not_exist.branch-nope"
  >
    <span>
      branch-nope
       
      <AlertErrorIcon />
    </span>
  </Tooltip>
</Option>
`;

exports[`renderOption should render correctly: disabled 1`] = `
<Option
  data={
    Object {
      "isDisabled": true,
      "isMain": false,
      "label": "disabled",
      "value": "disabled",
    }
  }
>
  <React.Fragment>
    <span
      title="baseline.reference_branch.cannot_be_itself"
    >
      disabled
    </span>
  </React.Fragment>
</Option>
`;

exports[`renderOption should render correctly: main 1`] = `
<Option
  data={
    Object {
      "isMain": true,
      "label": "master",
      "value": "master",
    }
  }
>
  <React.Fragment>
    <span>
      master
    </span>
    <div
      className="badge spacer-left"
    >
      branches.main_branch
    </div>
  </React.Fragment>
</Option>
`;

exports[`should render correctly: Branch level - no other branches 1`] = `
<RadioCard
  onClick={[Function]}
  selected={true}
  title="baseline.reference_branch"
>
  <p>
    baseline.reference_branch.description
  </p>
  <div
    className="big-spacer-top display-flex-column"
  >
    <MandatoryFieldsExplanation
      className="spacer-bottom"
    />
    <label
      className="text-middle"
      htmlFor="reference_branch"
    >
      <strong>
        baseline.reference_branch.choose
      </strong>
      <MandatoryFieldMarker />
    </label>
    <Select
      autofocus={false}
      className="little-spacer-top spacer-bottom"
      components={
        Object {
          "Option": [Function],
        }
      }
      onChange={[Function]}
      options={
        Array [
          Object {
            "isMain": true,
            "label": "master",
            "value": "master",
          },
        ]
      }
      value={
        Object {
          "isMain": true,
          "label": "master",
          "value": "master",
        }
      }
    />
  </div>
</RadioCard>
`;

exports[`should render correctly: Branch level 1`] = `
<RadioCard
  onClick={[Function]}
  selected={true}
  title="baseline.reference_branch"
>
  <p>
    baseline.reference_branch.description
  </p>
  <div
    className="big-spacer-top display-flex-column"
  >
    <MandatoryFieldsExplanation
      className="spacer-bottom"
    />
    <label
      className="text-middle"
      htmlFor="reference_branch"
    >
      <strong>
        baseline.reference_branch.choose
      </strong>
      <MandatoryFieldMarker />
    </label>
    <Select
      autofocus={false}
      className="little-spacer-top spacer-bottom"
      components={
        Object {
          "Option": [Function],
        }
      }
      onChange={[Function]}
      options={
        Array [
          Object {
            "isMain": true,
            "label": "master",
            "value": "master",
          },
          Object {
            "isMain": false,
            "label": "branch-7.9",
            "value": "branch-7.9",
          },
        ]
      }
      value={
        Object {
          "isMain": true,
          "label": "master",
          "value": "master",
        }
      }
    />
  </div>
</RadioCard>
`;

exports[`should render correctly: Project level 1`] = `
<RadioCard
  onClick={[Function]}
  selected={true}
  title="baseline.reference_branch"
>
  <p>
    baseline.reference_branch.description
  </p>
  <p
    className="spacer-top"
  >
    baseline.reference_branch.description2
  </p>
  <div
    className="big-spacer-top display-flex-column"
  >
    <MandatoryFieldsExplanation
      className="spacer-bottom"
    />
    <label
      className="text-middle"
      htmlFor="reference_branch"
    >
      <strong>
        baseline.reference_branch.choose
      </strong>
      <MandatoryFieldMarker />
    </label>
    <Select
      autofocus={false}
      className="little-spacer-top spacer-bottom"
      components={
        Object {
          "Option": [Function],
        }
      }
      onChange={[Function]}
      options={
        Array [
          Object {
            "isMain": true,
            "label": "master",
            "value": "master",
          },
          Object {
            "isMain": false,
            "label": "branch-7.9",
            "value": "branch-7.9",
          },
        ]
      }
      value={
        Object {
          "isMain": true,
          "label": "master",
          "value": "master",
        }
      }
    />
  </div>
</RadioCard>
`;
