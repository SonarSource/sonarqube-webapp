// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should display choice between import or creation 1`] = `
<OrganizationDetailsStep
  finished={false}
  onOpen={[Function]}
  open={true}
  organization={
    Object {
      "avatar": "http://example.com/avatar",
      "description": "description-foo",
      "key": "key-foo",
      "name": "name-foo",
      "personal": false,
      "url": "http://example.com/foo",
    }
  }
>
  <div
    className="huge-spacer-bottom"
  >
    <p
      className="big-spacer-bottom"
    >
      <FormattedMessage
        defaultMessage="onboarding.import_organization_x"
        id="onboarding.import_organization_x"
        values={
          Object {
            "avatar": <img
              alt="BitBucket"
              className="little-spacer-left"
              src="/images/sonarcloud/bitbucket.svg"
              width={16}
            />,
            "name": <strong>
              name-foo
            </strong>,
          }
        }
      />
    </p>
    <RadioToggle
      disabled={false}
      name="filter"
      onCheck={[Function]}
      options={
        Array [
          Object {
            "label": "onboarding.import_organization.create_new",
            "value": "create",
          },
          Object {
            "label": "onboarding.import_organization.bind_existing",
            "value": "bind",
          },
        ]
      }
      value={null}
    />
  </div>
</OrganizationDetailsStep>
`;

exports[`should render prefilled and create org 1`] = `
<OrganizationDetailsStep
  finished={false}
  onOpen={[Function]}
  open={true}
  organization={
    Object {
      "avatar": "http://example.com/avatar",
      "description": "description-foo",
      "key": "key-foo",
      "name": "name-foo",
      "personal": false,
      "url": "http://example.com/foo",
    }
  }
>
  <div
    className="huge-spacer-bottom"
  >
    <p
      className="big-spacer-bottom"
    >
      <FormattedMessage
        defaultMessage="onboarding.import_organization_x"
        id="onboarding.import_organization_x"
        values={
          Object {
            "avatar": <img
              alt="BitBucket"
              className="little-spacer-left"
              src="/images/sonarcloud/bitbucket.svg"
              width={16}
            />,
            "name": <strong>
              name-foo
            </strong>,
          }
        }
      />
    </p>
  </div>
  <OrganizationDetailsForm
    onContinue={[Function]}
    organization={
      Object {
        "avatar": "http://example.com/avatar",
        "description": "description-foo",
        "key": "key-foo",
        "name": "name-foo",
        "personal": false,
        "url": "http://example.com/foo",
      }
    }
    submitText="onboarding.import_organization.import"
  />
</OrganizationDetailsStep>
`;

exports[`should render with import org button 1`] = `
<withRouter(ChooseRemoteOrganizationStep)
  almApplication={
    Object {
      "backgroundColor": "#0052CC",
      "iconPath": "\\"/static/authbitbucket/bitbucket.svg\\"",
      "installationUrl": "https://bitbucket.org/install/app",
      "key": "bitbucket",
      "name": "BitBucket",
    }
  }
  almUnboundApplications={Array []}
/>
`;
