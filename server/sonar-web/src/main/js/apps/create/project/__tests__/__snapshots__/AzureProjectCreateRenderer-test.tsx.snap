// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly: loading 1`] = `
<Fragment>
  <CreateProjectPageHeader
    title={
      <span
        className="text-middle"
      >
        <img
          alt=""
          className="spacer-right"
          height="24"
          src="/images/alm/azure.svg"
        />
        onboarding.create_project.azure.title
      </span>
    }
  />
  <AlmSettingsInstanceDropdown
    almInstances={
      Array [
        Object {
          "alm": "azure",
          "key": "key",
          "url": "https://azure.company.com",
        },
      ]
    }
    almKey="azure"
    onChangeConfig={[MockFunction]}
  />
  <i
    className="spinner"
  />
</Fragment>
`;

exports[`should render correctly: no settings 1`] = `
<Fragment>
  <CreateProjectPageHeader
    title={
      <span
        className="text-middle"
      >
        <img
          alt=""
          className="spacer-right"
          height="24"
          src="/images/alm/azure.svg"
        />
        onboarding.create_project.azure.title
      </span>
    }
  />
  <AlmSettingsInstanceDropdown
    almKey="azure"
    onChangeConfig={[MockFunction]}
  />
  <WrongBindingCountAlert
    alm="azure"
    canAdmin={true}
  />
</Fragment>
`;

exports[`should render correctly: project list 1`] = `
<Fragment>
  <CreateProjectPageHeader
    additionalActions={
      <div
        className="display-flex-center pull-right"
      >
        <DeferredSpinner
          className="spacer-right"
          loading={false}
        />
        <Button
          className="button-large button-primary"
          disabled={true}
          onClick={[MockFunction]}
        >
          onboarding.create_project.import_selected_repo
        </Button>
      </div>
    }
    title={
      <span
        className="text-middle"
      >
        <img
          alt=""
          className="spacer-right"
          height="24"
          src="/images/alm/azure.svg"
        />
        onboarding.create_project.azure.title
      </span>
    }
  />
  <AlmSettingsInstanceDropdown
    almInstances={
      Array [
        Object {
          "alm": "azure",
          "key": "key",
          "url": "https://azure.company.com",
        },
        Object {
          "alm": "azure",
          "key": "key2",
          "url": "https://azure.company.com",
        },
      ]
    }
    almKey="azure"
    onChangeConfig={[MockFunction]}
    selectedAlmInstance={
      Object {
        "alm": "azure",
        "key": "key",
        "url": "https://azure.company.com",
      }
    }
  />
  <div
    className="huge-spacer-bottom"
  >
    <SearchBox
      onChange={[MockFunction]}
      placeholder="onboarding.create_project.search_projects_repositories"
    />
  </div>
  <DeferredSpinner
    loading={false}
  >
    <AzureProjectsList
      importing={false}
      loadingRepositories={Object {}}
      onOpenProject={[MockFunction]}
      onSelectRepository={[MockFunction]}
      projects={
        Array [
          Object {
            "description": "Azure Project",
            "name": "azure-project-1",
          },
        ]
      }
      repositories={
        Object {
          "azure-project-1": Array [
            Object {
              "name": "Azure repo 1",
              "projectName": "Azure Project",
            },
          ],
        }
      }
    />
  </DeferredSpinner>
</Fragment>
`;

exports[`should render correctly: setting missing url, admin 1`] = `
<Fragment>
  <CreateProjectPageHeader
    additionalActions={false}
    title={
      <span
        className="text-middle"
      >
        <img
          alt=""
          className="spacer-right"
          height="24"
          src="/images/alm/azure.svg"
        />
        onboarding.create_project.azure.title
      </span>
    }
  />
  <AlmSettingsInstanceDropdown
    almInstances={
      Array [
        Object {
          "alm": "azure",
          "key": "key",
        },
      ]
    }
    almKey="azure"
    onChangeConfig={[MockFunction]}
  />
</Fragment>
`;

exports[`should render correctly: setting missing url, not admin 1`] = `
<Fragment>
  <CreateProjectPageHeader
    title={
      <span
        className="text-middle"
      >
        <img
          alt=""
          className="spacer-right"
          height="24"
          src="/images/alm/azure.svg"
        />
        onboarding.create_project.azure.title
      </span>
    }
  />
  <AlmSettingsInstanceDropdown
    almInstances={
      Array [
        Object {
          "alm": "azure",
          "key": "key",
        },
      ]
    }
    almKey="azure"
    onChangeConfig={[MockFunction]}
  />
</Fragment>
`;

exports[`should render correctly: token form 1`] = `
<Fragment>
  <CreateProjectPageHeader
    additionalActions={false}
    title={
      <span
        className="text-middle"
      >
        <img
          alt=""
          className="spacer-right"
          height="24"
          src="/images/alm/azure.svg"
        />
        onboarding.create_project.azure.title
      </span>
    }
  />
  <AlmSettingsInstanceDropdown
    almInstances={
      Array [
        Object {
          "alm": "azure",
          "key": "key",
          "url": "https://azure.company.com",
        },
      ]
    }
    almKey="azure"
    onChangeConfig={[MockFunction]}
  />
</Fragment>
`;
