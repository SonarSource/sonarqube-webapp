// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should correcly display new/overall measure for portfolio: new metrics 1`] = `
{
  "baseComponent": {
    "breadcrumbs": [],
    "key": "my-project",
    "name": "MyProject",
    "qualifier": "TRK",
    "qualityGate": {
      "isDefault": true,
      "key": "30",
      "name": "Sonar way",
    },
    "qualityProfiles": [
      {
        "deleted": false,
        "key": "my-qp",
        "language": "ts",
        "name": "Sonar way",
      },
    ],
    "tags": [],
  },
  "branchLike": undefined,
  "components": [
    {
      "breadcrumbs": [],
      "key": "my-project",
      "name": "MyProject",
      "qualifier": "TRK",
      "qualityGate": {
        "isDefault": true,
        "key": "30",
        "name": "Sonar way",
      },
      "qualityProfiles": [
        {
          "deleted": false,
          "key": "my-qp",
          "language": "ts",
          "name": "Sonar way",
        },
      ],
      "tags": [],
    },
  ],
  "cycle": true,
  "metrics": [
    {
      "domain": "new_reliability_rating",
      "id": "4",
      "key": "new_reliability_rating",
      "name": "new_reliability_rating",
      "type": "RATING",
    },
  ],
  "newCodeSelected": true,
  "onEndOfList": [Function],
  "onGoToParent": [Function],
  "onHighlight": [Function],
  "onSelect": [Function],
  "rootComponent": {
    "breadcrumbs": [],
    "canBrowseAllChildProjects": true,
    "key": "my-project",
    "name": "MyProject",
    "qualifier": "VW",
    "qualityGate": {
      "isDefault": true,
      "key": "30",
      "name": "Sonar way",
    },
    "qualityProfiles": [
      {
        "deleted": false,
        "key": "my-qp",
        "language": "ts",
        "name": "Sonar way",
      },
    ],
    "tags": [],
  },
  "selected": undefined,
}
`;

exports[`should correcly display new/overall measure for portfolio: overall metrics 1`] = `
{
  "baseComponent": {
    "breadcrumbs": [],
    "key": "my-project",
    "name": "MyProject",
    "qualifier": "TRK",
    "qualityGate": {
      "isDefault": true,
      "key": "30",
      "name": "Sonar way",
    },
    "qualityProfiles": [
      {
        "deleted": false,
        "key": "my-qp",
        "language": "ts",
        "name": "Sonar way",
      },
    ],
    "tags": [],
  },
  "branchLike": undefined,
  "components": [
    {
      "breadcrumbs": [],
      "key": "my-project",
      "name": "MyProject",
      "qualifier": "TRK",
      "qualityGate": {
        "isDefault": true,
        "key": "30",
        "name": "Sonar way",
      },
      "qualityProfiles": [
        {
          "deleted": false,
          "key": "my-qp",
          "language": "ts",
          "name": "Sonar way",
        },
      ],
      "tags": [],
    },
  ],
  "cycle": true,
  "metrics": [
    {
      "domain": "reliability_rating",
      "id": "2",
      "key": "reliability_rating",
      "name": "reliability_rating",
      "type": "RATING",
    },
  ],
  "newCodeSelected": false,
  "onEndOfList": [Function],
  "onGoToParent": [Function],
  "onHighlight": [Function],
  "onSelect": [Function],
  "rootComponent": {
    "breadcrumbs": [],
    "canBrowseAllChildProjects": true,
    "key": "my-project",
    "name": "MyProject",
    "qualifier": "VW",
    "qualityGate": {
      "isDefault": true,
      "key": "30",
      "name": "Sonar way",
    },
    "qualityProfiles": [
      {
        "deleted": false,
        "key": "my-qp",
        "language": "ts",
        "name": "Sonar way",
      },
    ],
    "tags": [],
  },
  "selected": undefined,
}
`;

exports[`should render a warning message when user does not have access to all projects whithin a Portfolio: Project page with warning 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Styled(Alert)
    className="it__portfolio_warning"
    variant="warning"
  >
    <Styled(div)>
      code_viewer.not_all_measures_are_shown
      <HelpTooltip
        ariaLabel="code_viewer.not_all_measures_are_shown.help"
        className="spacer-left"
        overlay="code_viewer.not_all_measures_are_shown.help"
      />
    </Styled(div)>
  </Styled(Alert)>
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <div
    className="code-components"
  >
    <div
      className="display-flex-center display-flex-column no-file"
    >
      <span
        className="h1 text-muted"
      >
        code_viewer.no_source_code_displayed_due_to_empty_analysis.VW
      </span>
    </div>
  </div>
</div>
`;

exports[`should render correclty when no sub component for APP 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <div
    className="code-components"
  >
    <div
      className="display-flex-center display-flex-column no-file"
    >
      <span
        className="h1 text-muted"
      >
        code_viewer.no_source_code_displayed_due_to_empty_analysis.APP
      </span>
    </div>
  </div>
</div>
`;

exports[`should render correclty when no sub component for APP: no search 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <withRouter(Search)
    component={
      {
        "breadcrumbs": [],
        "canBrowseAllChildProjects": true,
        "key": "foo",
        "name": "foo",
        "qualifier": "APP",
      }
    }
    newCodeSelected={true}
    onNewCodeToggle={[Function]}
    onSearchClear={[Function]}
    onSearchResults={[Function]}
  />
  <div
    className="code-components"
  >
    <div
      className="boxed-group spacer-top search-results"
    >
      <withKeyboardNavigation(Components)
        components={[]}
        metrics={[]}
        onHighlight={[Function]}
        onSelect={[Function]}
        rootComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "APP",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`should render correclty when no sub component for APP: with sub component 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <withRouter(Search)
    component={
      {
        "breadcrumbs": [],
        "canBrowseAllChildProjects": true,
        "key": "foo",
        "name": "foo",
        "qualifier": "APP",
      }
    }
    newCodeSelected={true}
    onNewCodeToggle={[Function]}
    onSearchClear={[Function]}
    onSearchResults={[Function]}
  />
  <div
    className="code-components"
  >
    <div
      className="boxed-group spacer-top"
    >
      <withKeyboardNavigation(Components)
        baseComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "APP",
          }
        }
        components={
          [
            {
              "breadcrumbs": [],
              "key": "my-project",
              "name": "MyProject",
              "qualifier": "FIL",
              "qualityGate": {
                "isDefault": true,
                "key": "30",
                "name": "Sonar way",
              },
              "qualityProfiles": [
                {
                  "deleted": false,
                  "key": "my-qp",
                  "language": "ts",
                  "name": "Sonar way",
                },
              ],
              "tags": [],
            },
          ]
        }
        cycle={true}
        metrics={
          [
            {
              "domain": "Coverage",
              "id": "2",
              "key": "coverage",
              "name": "Coverage",
              "type": "PERCENT",
            },
          ]
        }
        newCodeSelected={true}
        onEndOfList={[Function]}
        onGoToParent={[Function]}
        onHighlight={[Function]}
        onSelect={[Function]}
        rootComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "APP",
          }
        }
      />
    </div>
    <ListFooter
      count={1}
      loadMore={[Function]}
      total={1}
    />
  </div>
</div>
`;

exports[`should render correclty when no sub component for SVW 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <div
    className="code-components"
  >
    <div
      className="display-flex-center display-flex-column no-file"
    >
      <span
        className="h1 text-muted"
      >
        code_viewer.no_source_code_displayed_due_to_empty_analysis.SVW
      </span>
    </div>
  </div>
</div>
`;

exports[`should render correclty when no sub component for SVW: no search 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <withRouter(Search)
    component={
      {
        "breadcrumbs": [],
        "canBrowseAllChildProjects": true,
        "key": "foo",
        "name": "foo",
        "qualifier": "SVW",
      }
    }
    newCodeSelected={true}
    onNewCodeToggle={[Function]}
    onSearchClear={[Function]}
    onSearchResults={[Function]}
  />
  <div
    className="code-components"
  >
    <div
      className="boxed-group spacer-top search-results"
    >
      <withKeyboardNavigation(Components)
        components={[]}
        metrics={[]}
        onHighlight={[Function]}
        onSelect={[Function]}
        rootComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "SVW",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`should render correclty when no sub component for SVW: with sub component 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <withRouter(Search)
    component={
      {
        "breadcrumbs": [],
        "canBrowseAllChildProjects": true,
        "key": "foo",
        "name": "foo",
        "qualifier": "SVW",
      }
    }
    newCodeSelected={true}
    onNewCodeToggle={[Function]}
    onSearchClear={[Function]}
    onSearchResults={[Function]}
  />
  <div
    className="code-components"
  >
    <div
      className="boxed-group spacer-top"
    >
      <withKeyboardNavigation(Components)
        baseComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "SVW",
          }
        }
        components={
          [
            {
              "breadcrumbs": [],
              "key": "my-project",
              "name": "MyProject",
              "qualifier": "FIL",
              "qualityGate": {
                "isDefault": true,
                "key": "30",
                "name": "Sonar way",
              },
              "qualityProfiles": [
                {
                  "deleted": false,
                  "key": "my-qp",
                  "language": "ts",
                  "name": "Sonar way",
                },
              ],
              "tags": [],
            },
          ]
        }
        cycle={true}
        metrics={[]}
        newCodeSelected={true}
        onEndOfList={[Function]}
        onGoToParent={[Function]}
        onHighlight={[Function]}
        onSelect={[Function]}
        rootComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "SVW",
          }
        }
      />
    </div>
    <ListFooter
      count={1}
      loadMore={[Function]}
      total={1}
    />
  </div>
</div>
`;

exports[`should render correclty when no sub component for TRK 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="code.page"
  />
  <div
    className="code-components"
  >
    <div
      className="display-flex-center display-flex-column no-file"
    >
      <span
        className="h1 text-muted"
      >
        code_viewer.no_source_code_displayed_due_to_empty_analysis.TRK
      </span>
    </div>
  </div>
</div>
`;

exports[`should render correclty when no sub component for TRK: no search 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="code.page"
  />
  <withRouter(Search)
    component={
      {
        "breadcrumbs": [],
        "canBrowseAllChildProjects": true,
        "key": "foo",
        "name": "foo",
        "qualifier": "TRK",
      }
    }
    newCodeSelected={true}
    onNewCodeToggle={[Function]}
    onSearchClear={[Function]}
    onSearchResults={[Function]}
  />
  <div
    className="code-components"
  >
    <div
      className="boxed-group spacer-top search-results"
    >
      <withKeyboardNavigation(Components)
        components={[]}
        metrics={[]}
        onHighlight={[Function]}
        onSelect={[Function]}
        rootComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "TRK",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`should render correclty when no sub component for TRK: with sub component 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="code.page"
  />
  <withRouter(Search)
    component={
      {
        "breadcrumbs": [],
        "canBrowseAllChildProjects": true,
        "key": "foo",
        "name": "foo",
        "qualifier": "TRK",
      }
    }
    newCodeSelected={true}
    onNewCodeToggle={[Function]}
    onSearchClear={[Function]}
    onSearchResults={[Function]}
  />
  <div
    className="code-components"
  >
    <div
      className="boxed-group spacer-top"
    >
      <withKeyboardNavigation(Components)
        baseComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "TRK",
          }
        }
        components={
          [
            {
              "breadcrumbs": [],
              "key": "my-project",
              "name": "MyProject",
              "qualifier": "FIL",
              "qualityGate": {
                "isDefault": true,
                "key": "30",
                "name": "Sonar way",
              },
              "qualityProfiles": [
                {
                  "deleted": false,
                  "key": "my-qp",
                  "language": "ts",
                  "name": "Sonar way",
                },
              ],
              "tags": [],
            },
          ]
        }
        cycle={true}
        metrics={
          [
            {
              "domain": "Coverage",
              "id": "2",
              "key": "coverage",
              "name": "Coverage",
              "type": "PERCENT",
            },
          ]
        }
        newCodeSelected={true}
        onEndOfList={[Function]}
        onGoToParent={[Function]}
        onHighlight={[Function]}
        onSelect={[Function]}
        rootComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "TRK",
          }
        }
      />
    </div>
    <ListFooter
      count={1}
      loadMore={[Function]}
      total={1}
    />
  </div>
</div>
`;

exports[`should render correclty when no sub component for VW 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <div
    className="code-components"
  >
    <div
      className="display-flex-center display-flex-column no-file"
    >
      <span
        className="h1 text-muted"
      >
        code_viewer.no_source_code_displayed_due_to_empty_analysis.VW
      </span>
    </div>
  </div>
</div>
`;

exports[`should render correclty when no sub component for VW: no search 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <withRouter(Search)
    component={
      {
        "breadcrumbs": [],
        "canBrowseAllChildProjects": true,
        "key": "foo",
        "name": "foo",
        "qualifier": "VW",
      }
    }
    newCodeSelected={true}
    onNewCodeToggle={[Function]}
    onSearchClear={[Function]}
    onSearchResults={[Function]}
  />
  <div
    className="code-components"
  >
    <div
      className="boxed-group spacer-top search-results"
    >
      <withKeyboardNavigation(Components)
        components={[]}
        metrics={[]}
        onHighlight={[Function]}
        onSelect={[Function]}
        rootComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "VW",
          }
        }
      />
    </div>
  </div>
</div>
`;

exports[`should render correclty when no sub component for VW: with sub component 1`] = `
<div
  className="page page-limited"
>
  <A11ySkipTarget
    anchor="code_main"
  />
  <Suggestions
    suggestions="code"
  />
  <Helmet
    defer={false}
    encodeSpecialCharacters={true}
    prioritizeSeoTags={false}
    title="projects.page"
  />
  <withRouter(Search)
    component={
      {
        "breadcrumbs": [],
        "canBrowseAllChildProjects": true,
        "key": "foo",
        "name": "foo",
        "qualifier": "VW",
      }
    }
    newCodeSelected={true}
    onNewCodeToggle={[Function]}
    onSearchClear={[Function]}
    onSearchResults={[Function]}
  />
  <div
    className="code-components"
  >
    <div
      className="boxed-group spacer-top"
    >
      <withKeyboardNavigation(Components)
        baseComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "VW",
          }
        }
        components={
          [
            {
              "breadcrumbs": [],
              "key": "my-project",
              "name": "MyProject",
              "qualifier": "FIL",
              "qualityGate": {
                "isDefault": true,
                "key": "30",
                "name": "Sonar way",
              },
              "qualityProfiles": [
                {
                  "deleted": false,
                  "key": "my-qp",
                  "language": "ts",
                  "name": "Sonar way",
                },
              ],
              "tags": [],
            },
          ]
        }
        cycle={true}
        metrics={[]}
        newCodeSelected={true}
        onEndOfList={[Function]}
        onGoToParent={[Function]}
        onHighlight={[Function]}
        onSelect={[Function]}
        rootComponent={
          {
            "breadcrumbs": [],
            "canBrowseAllChildProjects": true,
            "key": "foo",
            "name": "foo",
            "qualifier": "VW",
          }
        }
      />
    </div>
    <ListFooter
      count={1}
      loadMore={[Function]}
      total={1}
    />
  </div>
</div>
`;
