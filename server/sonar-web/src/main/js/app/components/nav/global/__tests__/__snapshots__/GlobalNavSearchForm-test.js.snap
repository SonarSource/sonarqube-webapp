// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders "Show More" link 1`] = `
<ul
  className="menu"
>
  <li
    className="dropdown-header"
  >
    qualifiers.TRK
  </li>
  <GlobalNavSearchFormComponent
    appState={
      Object {
        "organizationsEnabled": false,
      }
    }
    component={
      Object {
        "key": "foo",
        "name": "foo",
        "qualifier": "TRK",
      }
    }
    innerRef={[Function]}
    onClose={[Function]}
    onSelect={[Function]}
    organizations={Object {}}
    projects={Object {}}
    selected={false}
  />
  <GlobalNavSearchFormComponent
    appState={
      Object {
        "organizationsEnabled": false,
      }
    }
    component={
      Object {
        "key": "bar",
        "name": "bar",
        "qualifier": "TRK",
      }
    }
    innerRef={[Function]}
    onClose={[Function]}
    onSelect={[Function]}
    organizations={Object {}}
    projects={Object {}}
    selected={false}
  />
  <li
    className="menu-footer"
  >
    <DeferredSpinner
      className="navbar-search-icon"
      loading={false}
      timeout={100}
    >
      <a
        data-qualifier="TRK"
        href="#"
        onClick={[Function]}
      >
        show_more
      </a>
    </DeferredSpinner>
  </li>
  <li
    className="divider"
  />
  <li
    className="dropdown-header"
  >
    qualifiers.BRC
  </li>
  <GlobalNavSearchFormComponent
    appState={
      Object {
        "organizationsEnabled": false,
      }
    }
    component={
      Object {
        "key": "qwe",
        "name": "qwe",
        "qualifier": "BRC",
      }
    }
    innerRef={[Function]}
    onClose={[Function]}
    onSelect={[Function]}
    organizations={Object {}}
    projects={Object {}}
    selected={false}
  />
  <GlobalNavSearchFormComponent
    appState={
      Object {
        "organizationsEnabled": false,
      }
    }
    component={
      Object {
        "key": "qux",
        "name": "qux",
        "qualifier": "BRC",
      }
    }
    innerRef={[Function]}
    onClose={[Function]}
    onSelect={[Function]}
    organizations={Object {}}
    projects={Object {}}
    selected={false}
  />
</ul>
`;

exports[`renders different components and dividers between them 1`] = `
<ul
  className="menu"
>
  <li
    className="dropdown-header"
  >
    qualifiers.TRK
  </li>
  <GlobalNavSearchFormComponent
    appState={
      Object {
        "organizationsEnabled": false,
      }
    }
    component={
      Object {
        "key": "foo",
        "name": "foo",
        "qualifier": "TRK",
      }
    }
    innerRef={[Function]}
    onClose={[Function]}
    onSelect={[Function]}
    organizations={Object {}}
    projects={Object {}}
    selected={false}
  />
  <GlobalNavSearchFormComponent
    appState={
      Object {
        "organizationsEnabled": false,
      }
    }
    component={
      Object {
        "key": "bar",
        "name": "bar",
        "qualifier": "TRK",
      }
    }
    innerRef={[Function]}
    onClose={[Function]}
    onSelect={[Function]}
    organizations={Object {}}
    projects={Object {}}
    selected={false}
  />
  <li
    className="divider"
  />
  <li
    className="dropdown-header"
  >
    qualifiers.BRC
  </li>
  <GlobalNavSearchFormComponent
    appState={
      Object {
        "organizationsEnabled": false,
      }
    }
    component={
      Object {
        "key": "qwe",
        "name": "qwe",
        "qualifier": "BRC",
      }
    }
    innerRef={[Function]}
    onClose={[Function]}
    onSelect={[Function]}
    organizations={Object {}}
    projects={Object {}}
    selected={false}
  />
  <GlobalNavSearchFormComponent
    appState={
      Object {
        "organizationsEnabled": false,
      }
    }
    component={
      Object {
        "key": "qux",
        "name": "qux",
        "qualifier": "BRC",
      }
    }
    innerRef={[Function]}
    onClose={[Function]}
    onSelect={[Function]}
    organizations={Object {}}
    projects={Object {}}
    selected={false}
  />
  <li
    className="divider"
  />
  <li
    className="dropdown-header"
  >
    qualifiers.FIL
  </li>
  <GlobalNavSearchFormComponent
    appState={
      Object {
        "organizationsEnabled": false,
      }
    }
    component={
      Object {
        "key": "zux",
        "name": "zux",
        "qualifier": "FIL",
      }
    }
    innerRef={[Function]}
    onClose={[Function]}
    onSelect={[Function]}
    organizations={Object {}}
    projects={Object {}}
    selected={false}
  />
</ul>
`;

exports[`shows warning about short input 1`] = `
<span
  className="navbar-search-input-hint"
>
  select2.tooShort.2
</span>
`;

exports[`shows warning about short input 2`] = `
<span
  className="navbar-search-input-hint is-shifted"
>
  select2.tooShort.2
</span>
`;
